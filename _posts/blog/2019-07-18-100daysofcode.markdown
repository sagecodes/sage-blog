---
layout: post
title:  "My 100 days of ML code - Round 1"
permalink: /100daysofmlcode/
date:   2019-07-18
categories: post
tags: machine-learning
author: Sage Elliott
published: true
---

A diary type post of my 100 days of Machine learning code [#100DaysofMLcode](https://twitter.com/search?q=%23100DaysOfMLCode&src=tyah). Read below project list micro blog posts about each day.


----------------


## Day 1 ‚òë

Continue learning about classification models in scikit learn.

I did a couple of k-NN implementations as I Continue working through common classification models in sklearn. I had done an iris k-NN before but using an external dataset let me use Label Encoders!

#### Code for the day:

- [Iris Classification](https://github.com/sagecodes/irsit-classification2-knn)
- [T-Shirt Classfication](https://github.com/sagecodes/tshirt-size-prediction-KNN)


----------------

## Day 2 ‚òë

Went to a [Python Meetup](https://www.meetup.com/PSPPython/) discussing time series forecasting at scale with FB Prophet so I thought I would do an implementation using it. Used it on a Chicago crime dataset. 

Read more about forecasting at scale with prophet [here]( https://peerj.com/preprints/3190.pdf).

Read more about Time series [here](https://otexts.com/fpp2/arima.html). 

 Find the github for Facebook prohet [here](https://github.com/facebook/prophet). 

#### Code for the day:

- [Chicago Crime Rate forecast](https://github.com/sagecodes/chicago-crime-prediction-fbprophet)
 
----------------

## Day 3 ‚òë

Another prophet forecasting implementation on one of the most important commodities ü•ë Avocados! The price looks like its dropping over all across the US but rises  across west coast regions. I'll never be able to buy a house #millennial

Refreshed on some SQL and updating content on a SQL workshop

#### Code for the day:

- [Avocado Price forecast](https://github.com/sagecodes/avocado-forecasting-fbprophet)
- [Intro to SQL update for my workshop](https://github.com/sagecodes/intro-to-sql)

----------------

## Day 4 ‚òë

Learned more about using decision trees and random forests also about text feature extraction with sklearn CountVectorizer.
Used this to predict is a customer reviews on alexa were positive or negative.

Dataset used: [Kaggle Amazon Alexa Reviews](https://www.kaggle.com/sid321axn/amazon-alexa-reviews)

#### Code for the day:

- [Alexa Amazon Review Classfication](https://github.com/sagecodes/Amazon-Review-Classification-Random-Forest)



----------------

## Day 5 ‚òë

More Random Forests

More Decision Trees and Random Forests. I'm really impressed with the random forest results! Used this Kyphosis Kaggle datset and visually it seems very hard to classify data points, but the classifier worked well. Cool to see how much better the random forest performed vs just the decsion tree.

Dataset used: [Kaggle Kyphosis](https://www.kaggle.com/abbasit/kyphosis-dataset)

#### Code for the day:

- [Kyphosis Prediction Random Forest](https://github.com/sagecodes/kyphsis-classifier-random-forest/blob/master/kyphosis-prediction-random-forest.ipynb)

----------------

## Day 6 ‚òë

Built Naive Bayes classifier on Email dataset to detect spam / not spam. 

Also used Naive Bayes classifier a credit card dataset to detect fraud.

Completed [ Machine Learning Classification Bootcamp in Python](https://www.udemy.com/certificate/UC-MWZST68M/)




#### Code for the day:

- [Email Spam Classifer with Naive Bayes](https://github.com/sagecodes/spam-classifier-naive-bayes/blob/master/Spam%20classifier.ipynb)
- [Credit Card Fraud with Naive Bayes](https://github.com/sagecodes/credit-fraud-classfier-naive-bayes/blob/master/Credit%20Card%20Fraud%20Classifier.ipynb)

----------------

## Day 7 ‚òë

1 week down! üéâ

Today was a good refresher on performing linear regrssion with scikit learn.

I Performed 2 simple linear regression case studies. Temperature vs. ice cream revenue (relevant today in Seattle) & Horsepower vs fuel consumption.

#### Code for the day:

- [Icecream vs. Temp](https://github.com/sagecodes/Icecream-temp-simple-linear-regression/blob/master/ice%20cream%20vs%20temp%20regression.ipynb)
- [Fuel Consumption vs. horsepower](https://github.com/sagecodes/fuel-consumption-linear-regression/blob/master/fuel%20consumption.ipynb)

----------------

## Day 8 ‚òë

Learn about Regression performance indicaters 

- Mean Squared error (MSE)
- Root mean squared error (MSE)
- Mean Absolute Percentage Error(MAPE)
- Mean Percentage Error(MPE)
- R squared 
- Adjusted R squared -
- Bias & Variance Tradeoff

Implemented Polynomial Regrssion with Scikit learn on Salary Data and Manufacturing price Data

Worked on setting up a Style GAN for next interation of a project

#### Neat reads:

[Collection of Machine learning and Datat Science notebooks](https://github.com/rasbt/python-machine-learning-book-2nd-edition)

[Style GANs](https://arxiv.org/pdf/1812.04948.pdf) 


#### Code for the day:

- [Salary Prediction with Polynominal Regression](https://github.com/sagecodes/salary-prediction-polynomial-regression/blob/master/salary%20prediction%20polynomial%20regression.ipynb)
- [price vs manufacturing polynomial-regression](https://github.com/sagecodes/price-vs-manufacturing-polynomial-regression/blob/master/Cost%20per%20model%20prediction.ipynb)

----------------

## Day 9 ‚òë

Implemented 2 Multiple Linear regrssion Models

I learned to Calculate & Use:
- Mean Squared error (MSE)
- Root mean squared error (MSE)
- Mean Absolute Percentage Error(MAPE)
- Mean Percentage Error(MPE)
- R squared 
- Adjusted R squared 

Read up on WGANs for a side project. WGANs sound like the might be a good option for what I need:

WGAN reading material:

- [WGAN Paper](https://arxiv.org/abs/1701.07875)
- [WGAN Medium Article](https://medium.com/@jonathan_hui/gan-wasserstein-gan-wgan-gp-6a1a2aa1b490)

#### Code for the day:

- [stock employment - multiple regression](https://github.com/sagecodes/stock-employment-multiple-regression)

DataSet used
[Kaggle Admission Dataset](https://www.kaggle.com/mohansacharya/graduate-admissions)

----------------

## Day 10 ‚òë

Play around with more linear regression. Seeing what limiting featires does to a model.

Review Logistic Regrssion & Confusion Matrix results

#### Reviewed Projects from last month:
[Ads clicked Logistic Regression](https://github.com/sagecodes/ad-clicks-logistic-regression)
[Titanic Survival - Logistic Regression](https://github.com/sagecodes/titanic-survival-logistic-regression)


### Code for the Day:

- [stock employment - multiple regression](https://github.com/sagecodes/stock-employment-multiple-regression)





----------------

## Day 11 ‚òê

Artificial Neural Networks & Regression

Lasso & ridge regression

Artificial Neural Network prediction

Deep Neural Networks CIFAR

Deep Learning & LE-NET

----------------

## Day 12 ‚òê

Deep Neural Networks CIFAR

Deep Learning & LE-NET



----------------

## Day 13 ‚òê
NLP w/ Bayes 



----------------

## Day 14 ‚òê

Reccomender System



----------------


## Day 15 ‚òê

Evaluate if time for Computer Vision focus or more ML basics


----------------

## Day 16 ‚òê

----------------

## Day 17 ‚òê

----------------

## Day 18 ‚òê

----------------

## Day 19 ‚òê

----------------

## Day 20 ‚òê

----------------

## Day 21 ‚òê

----------------

## Day 22 ‚òê

----------------

## Day 23 ‚òê

----------------

## Day 24 ‚òê

----------------

## Day 25 ‚òê

----------------

## Day 26 ‚òê

----------------

## Day 27 ‚òê

----------------

## Day 28 ‚òê

----------------

## Day 29 ‚òê

----------------

## Day 30 ‚òê

----------------

## Day 31 ‚òê

----------------

## Day 32 ‚òê

----------------

## Day 33 ‚òê

----------------

## Day 34 ‚òê

----------------

## Day 35 ‚òê

----------------

## Day 36 ‚òê

----------------

## Day 37 ‚òê

----------------

## Day 38 ‚òê

----------------

## Day 39 ‚òê

----------------

## Day 40 ‚òê

----------------

## Day 41 ‚òê

----------------

## Day 42 ‚òê

----------------

## Day 41 ‚òê

----------------

## Day 42 ‚òê

----------------

## Day 43 ‚òê

----------------

## Day 44 ‚òê

----------------

## Day 45 ‚òê

----------------

## Day 46 ‚òê

----------------

## Day 47 ‚òê

----------------

## Day 48 ‚òê

----------------

## Day 49 ‚òê

----------------

## Day 50 ‚òê
HALF WAY!

----------------

## Day 51 ‚òê

----------------

## Day 52 ‚òê

----------------

## Day 53 ‚òê

----------------

## Day 54 ‚òê

----------------

## Day 55 ‚òê

----------------

## Day 56 ‚òê

----------------

## Day 57 ‚òê

----------------

## Day 58 ‚òê

----------------

## Day 59 ‚òê

----------------

## Day 60 ‚òê

----------------

## Day 61 ‚òê

----------------

## Day 62 ‚òê

----------------

## Day 63 ‚òê

----------------

## Day 64 ‚òê

----------------

## Day 65 ‚òê

----------------

## Day 66 ‚òê

----------------

## Day 67 ‚òê

----------------

## Day 68 ‚òê

----------------

## Day 69 ‚òê

----------------

## Day 70 ‚òê

----------------

## Day 71 ‚òê

----------------

## Day 72 ‚òê

----------------

## Day 73 ‚òê

----------------

## Day 74 ‚òê

----------------

## Day 75 ‚òê

----------------

## Day 76 ‚òê

----------------

## Day 77 ‚òê

----------------

## Day 78 ‚òê

----------------

## Day 79 ‚òê

----------------

## Day 80 ‚òê

----------------

## Day 81 ‚òê

----------------

## Day 82 ‚òê

----------------

## Day 83 ‚òê

----------------

## Day 84 ‚òê

----------------

## Day 85 ‚òê

----------------

## Day 86 ‚òê

----------------

## Day 87 ‚òê

----------------

## Day 88 ‚òê

----------------

## Day 89 ‚òê

----------------

## Day 90 ‚òê

----------------

## Day 91 ‚òê

----------------

## Day 92 ‚òê

----------------

## Day 93 ‚òê

----------------

## Day 94 ‚òê

----------------

## Day 95 ‚òê

----------------

## Day 96 ‚òê

----------------

## Day 97 ‚òê

----------------

## Day 98 ‚òê

----------------

## Day 99 ‚òê

----------------

## Day 100 ‚òê
DONE!!

----------------



## Completed Projects & Case Studies during 100 days:

#### Phase 1: Learn & Implement Basic Machine Learning & Deep Learning Models

1. [Iris Classification - kNN](https://github.com/sagecodes/irsit-classification2-knn)
2. [T-Shirt Classfication- kNN](https://github.com/sagecodes/tshirt-size-prediction-KNN)
3. [Chicago Crime Rate time series forecast - FBprophet ](https://github.com/sagecodes/chicago-crime-prediction-fbprophet)
4. [Avocado Price forecast - FBprophet](https://github.com/sagecodes/avocado-forecasting-fbprophet)
5. [Alexa Amazon Review Classfication - Random Forest](https://github.com/sagecodes/Amazon-Review-Classification-Random-Forest)
6. [Kyphosis Prediction - Random Forest](https://github.com/sagecodes/kyphsis-classifier-random-forest/blob/master/kyphosis-prediction-random-forest.ipynb)
7. [Email Spam Classifer -  Naive Bayes](https://github.com/sagecodes/spam-classifier-naive-bayes/blob/master/Spam%20classifier.ipynb)
8. [Credit Card Fraud - Naive Bayes](https://github.com/sagecodes/credit-fraud-classfier-naive-bayes/blob/master/Credit%20Card%20Fraud%20Classifier.ipynb)
9. [Icecream vs. Temp - Simple Linear Regression](https://github.com/sagecodes/Icecream-temp-simple-linear-regression/blob/master/ice%20cream%20vs%20temp%20regression.ipynb)
10. [Fuel Consumption vs. horsepower - Simple Linear Regression](https://github.com/sagecodes/fuel-consumption-linear-regression/blob/master/fuel%20consumption.ipynb)
11. [Salary Prediction with Polynominal Regression](https://github.com/sagecodes/salary-prediction-polynomial-regression/blob/master/salary%20prediction%20polynomial%20regression.ipynb)
12. [Price vs Manufacturing - polynomial Regression](https://github.com/sagecodes/price-vs-manufacturing-polynomial-regression/blob/master/Cost%20per%20model%20prediction.ipynb)
13. [stock employment - multiple regression](https://github.com/sagecodes/stock-employment-multiple-regression/blob/master/s%26p%20500%20predict.ipynb)
14. [Admissions - multiple regression](https://github.com/sagecodes/admission-multiple-regression)