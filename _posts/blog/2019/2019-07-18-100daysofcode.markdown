---
layout: post
title:  "My 100 days of ML code - Round 1"
permalink: /100daysofmlcode/
date:   2019-07-18
categories: post
tags: machine-learning
author: Sage Elliott
published: true
---

A diary type post of my 100 days of Machine learning code [#100DaysofMLcode](https://twitter.com/search?q=%23100DaysOfMLCode&src=tyah). Read below project list micro blog posts about each day.


----------------


## Day 1 ☑

Start phase 1: Quick implementations and accelerated learning

Continue learning about classification models in scikit learn.

I did a couple of k-NN implementations as I Continue working through common classification models in sklearn. I had done an iris k-NN before but using an external dataset let me use Label Encoders!

#### Code for the day:

- [Iris Classification](https://github.com/sagecodes/irsit-classification2-knn)
- [T-Shirt Classfication](https://github.com/sagecodes/tshirt-size-prediction-KNN)


----------------

## Day 2 ☑

Went to a [Python Meetup](https://www.meetup.com/PSPPython/) discussing time series forecasting at scale with FB Prophet so I thought I would do an implementation using it. Used it on a Chicago crime dataset. 

Read more about forecasting at scale with prophet [here]( https://peerj.com/preprints/3190.pdf).

Read more about Time series [here](https://otexts.com/fpp2/arima.html). 

 Find the github for Facebook prophet [here](https://github.com/facebook/prophet). 

#### Code for the day:

- [Chicago Crime Rate forecast](https://github.com/sagecodes/chicago-crime-prediction-fbprophet)
 
----------------

## Day 3 ☑

Another prophet forecasting implementation on one of the most important commodities 🥑 Avocados! The price looks like its dropping over all across the US but rises  across west coast regions. I'll never be able to buy a house #millennial

Refreshed on some SQL and updating content on a SQL workshop

#### Code for the day:

- [Avocado Price forecast](https://github.com/sagecodes/avocado-forecasting-fbprophet)
- [Intro to SQL update for my workshop](https://github.com/sagecodes/intro-to-sql)

----------------

## Day 4 ☑

Learned more about using decision trees and random forests also about text feature extraction with sklearn CountVectorizer.
Used this to predict is a customer reviews on Alexa were positive or negative.

Dataset used: [Kaggle Amazon Alexa Reviews](https://www.kaggle.com/sid321axn/amazon-alexa-reviews)

#### Code for the day:

- [Alexa Amazon Review Classfication](https://github.com/sagecodes/Amazon-Review-Classification-Random-Forest)



----------------

## Day 5 ☑

More Random Forests

More Decision Trees and Random Forests. I'm really impressed with the random forest results! Used this Kyphosis Kaggle dataset and visually it seems very hard to classify data points, but the classifier worked well. Cool to see how much better the random forest performed vs just the decision tree.

Dataset used: [Kaggle Kyphosis](https://www.kaggle.com/abbasit/kyphosis-dataset)

#### Code for the day:

- [Kyphosis Prediction Random Forest](https://github.com/sagecodes/kyphsis-classifier-random-forest/blob/master/kyphosis-prediction-random-forest.ipynb)

----------------

## Day 6 ☑

Built Naive Bayes classifier on Email dataset to detect spam / not spam. 

Also used Naive Bayes classifier a credit card dataset to detect fraud.

Completed [ Machine Learning Classification Bootcamp in Python](https://www.udemy.com/certificate/UC-MWZST68M/)




#### Code for the day:

- [Email Spam Classifer with Naive Bayes](https://github.com/sagecodes/spam-classifier-naive-bayes/blob/master/Spam%20classifier.ipynb)
- [Credit Card Fraud with Naive Bayes](https://github.com/sagecodes/credit-fraud-classfier-naive-bayes/blob/master/Credit%20Card%20Fraud%20Classifier.ipynb)

----------------

## Day 7 ☑

1 week down! 🎉

Today was a good refresher on performing linear regression with scikit learn.

I Performed 2 simple linear regression case studies. Temperature vs. ice cream revenue (relevant today in Seattle) & Horsepower vs fuel consumption.

#### Code for the day:

- [Ice cream vs. Temp](https://github.com/sagecodes/Icecream-temp-simple-linear-regression/blob/master/ice%20cream%20vs%20temp%20regression.ipynb)
- [Fuel Consumption vs. horsepower](https://github.com/sagecodes/fuel-consumption-linear-regression/blob/master/fuel%20consumption.ipynb)

----------------

## Day 8 ☑

Learn about Regression performance indicators 

- Mean Squared error (MSE)
- Root mean squared error (MSE)
- Mean Absolute Percentage Error(MAPE)
- Mean Percentage Error(MPE)
- R squared 
- Adjusted R squared -
- Bias & Variance Tradeoff

Implemented Polynomial Regression with Scikit learn on Salary Data and Manufacturing price Data

Worked on setting up a Style GAN for next iteration of a project

#### Neat reads:

[Collection of Machine learning and Datat Science notebooks](https://github.com/rasbt/python-machine-learning-book-2nd-edition)

[Style GANs](https://arxiv.org/pdf/1812.04948.pdf) 


#### Code for the day:

- [Salary Prediction with Polynominal Regression](https://github.com/sagecodes/salary-prediction-polynomial-regression/blob/master/salary%20prediction%20polynomial%20regression.ipynb)
- [price vs manufacturing polynomial-regression](https://github.com/sagecodes/price-vs-manufacturing-polynomial-regression/blob/master/Cost%20per%20model%20prediction.ipynb)

----------------

## Day 9 ☑

Implemented 2 Multiple Linear regression Models

I learned to Calculate & Use:
- Mean Squared error (MSE)
- Root mean squared error (MSE)
- Mean Absolute Percentage Error(MAPE)
- Mean Percentage Error(MPE)
- R squared 
- Adjusted R squared 

Read up on WGANs for a side project. WGANs sound like the might be a good option for what I need:

WGAN reading material:

- [WGAN Paper](https://arxiv.org/abs/1701.07875)
- [WGAN Medium Article](https://medium.com/@jonathan_hui/gan-wasserstein-gan-wgan-gp-6a1a2aa1b490)

#### Code for the day:

- [stock employment - multiple regression](https://github.com/sagecodes/stock-employment-multiple-regression)

DataSet used
[Kaggle Admission Dataset](https://www.kaggle.com/mohansacharya/graduate-admissions)

----------------

## Day 10 ☑

Play around with more linear regression. Seeing what limiting features does to a model.

Reviewed Logistic Regression & Confusion Matrix results

Lots of planning for Learning Roadmap!

Started [Mathematical Notation](https://www.amazon.com/Mathematical-Notation-Guide-Engineers-Scientists/dp/1466230525/) by Edward Scheinerman to help with reading more advanced machine learning material and technical papers.

#### Reviewed Projects from last month:

- [Ads clicked Logistic Regression](https://github.com/sagecodes/ad-clicks-logistic-regression)
- [Titanic Survival - Logistic Regression](https://github.com/sagecodes/titanic-survival-logistic-regression)


### Code for the Day:

- [stock employment - multiple regression](https://github.com/sagecodes/stock-employment-multiple-regression)





----------------

## Day 11 ☑

Implemented a Regression Artificial Neural Network to predict house prices in king county(Seattle). I have more tuning to do on it tomorrow for better results.

Dataset: [King county House data](https://www.kaggle.com/harlfoxem/housesalesprediction)

### Code for the Day:

- [Seattle House price prediction-ANN-Regression](https://github.com/sagecodes/house-price-prediction-ANN)



----------------

## Day 12 ☑

Super busy today so I woke up at 6 to get my study time in. 

Tuned the neural network I worked on last night to perform much better at prediction.

Implemented Lasso & Ridge Regression.

- [Seattle House price prediction-ANN-Regression](https://github.com/sagecodes/house-price-prediction-ANN)

- [house predict - lasso & ridge-regrssion](https://github.com/sagecodes/house-predict-lasso-ridge-regrssion)



----------------

## Day 13 ☑

More focus on theroy today over fininshing project

Started reading [Generative Deep Learning](https://www.amazon.com/Generative-Deep-Learning-Teaching-Machines/dp/1492041947) and planning out other details to continue on a GAN project. 

Started implementing a Artificial Neural Network to predict car sales. (Regression)

### Code for the Day:

- [WGAN Testing](https://github.com/sagecodes/WGAN-Testing)
- [Car Sales Prediction - ANN](https://github.com/sagecodes/car-sales-prediction-ANN)

----------------

## Day 14 ☑

Finished artificial neural network for another regression task

Started on a convolutional neural network for classification on the cifar datset.

### Code for the Day:

- [Car Sales Prediction - ANN](https://github.com/sagecodes/car-sales-prediction-ANN)
- [cifar imageclassifier - CNN](https://github.com/sagecodes/cifar-classifier-CNN)

----------------


## Day 15 ☑

Finished a Convolutional neural network(CNN) for the cifar data-set. 

Messing around a lot with tuning a CNN and refreshed on data augmentation.

Very excited to dive more into Deep Learning & Computer vision soon!

This data engineering [repo / book](https://github.com/andkret/Cookbook) looks great 

### Code for the Day:

- [cifar imageclassifier - CNN](https://github.com/sagecodes/cifar-classifier-CNN)


----------------

## Day 16 ☑

Started on a Traffic sign classifier using a the LeNet architecture.
[LeNet Paper](link: http://yann.lecun.com/exdb/publis/pdf/lecun-98.pdf)

### Code for the Day:

- [Traffic sign classifier](https://github.com/sagecodes/traffic-signs-classifier-lenet)

----------------

## Day 17 ☑

Finished a traffic sign classifier with a convolutional neural network and LetNet with decent initial results. Taught a class on web scraping with python.

### Code for the Day:

- [Traffic sign classifier](https://github.com/sagecodes/traffic-signs-classifier-lenet)

----------------

## Day 18 ☑

Trained first reinforcement learning model for AWS Deepracer leagues!

Started on a Yelp classification project using NLTK 

Loosing a bit of steam the past 2 days, looking to build it back up this week(tips?)!

### Code for the Day:

- [Yelp classification - NLTK](https://github.com/sagecodes/yelp-reviews-Classification-NLP-NLTK)

----------------

## Day 19 ☑

Worked on exploring dataset for yelp NLP project using Pandas and Seaborn.

Acquired a neat hardware dev kit I'm excited to work on this coming week.

### Code for the Day:

- [Yelp classification - NLTK](https://github.com/sagecodes/yelp-reviews-Classification-NLP-NLTK)

----------------

## Day 20 ☑

Worked more on an Yelp review classifier using some very basic NLP with NLTK and naive bayes. 

Moving AWS deepracer work to next weekend to accommodate for some things that came up!

### Code for the Day:

- [Yelp classification - NLTK](https://github.com/sagecodes/yelp-reviews-Classification-NLP-NLTK)

----------------

## Day 21 ☑

finished Yelp basic NLP project

Finished a basic movie recommender using  collaborative based filtering 

started setting up hardware devkit to play with this week

### Code for the Day:

- [Yelp classification - NLTK](https://github.com/sagecodes/yelp-reviews-Classification-NLP-NLTK)
- [Movie Recommender - collab filtering](https://github.com/sagecodes/movie-recommender-collab-filter)

----------------

## Day 22 ☑

Started on classifier for Fashion MNIST dataset using a convolution neural network(CNN)

Reviewed some python and pandas functions

Busy day but still squeezed in an hour, I got this! 😆

### Code for the Day:

- [Fashion MNIST](https://github.com/sagecodes/fashion-classifier)

----------------

## Day 23 ☑

Day23 worked a little bit more on the fashion classifier. 

Planned out some more interesting personal projects

Made a big decision that was kind of stressing me out, so should be able to focus more!

### Code for the Day:

- [Fashion MNIST](https://github.com/sagecodes/fashion-classifier)

----------------

## Day 24 ☑

Study session with Jay! 

Reviewed regression and classification models in sklearn

Taught intro to machine learning workshop

### Code for the Day:

- [Intro to Machine Learning](https://github.com/sagecodes/intro-machine-learning)

----------------

## Day 25 ☑


### Code for the Day:

- [Fashion MNIST](https://github.com/sagecodes/fashion-classifier)

----------------

## Day 26 ☑

Finished fashion MNIST classifier.

[Deep fashion dataset](http://mmlab.ie.cuhk.edu.hk/projects/DeepFashion.html) looks awesome to try sometime soon!

### Code for the Day:

- [Fashion MNIST](https://github.com/sagecodes/fashion-classifier)

----------------

## Day 27 ☑

Spent time refactoring some previous code and adding context to READMEs.  Will probably do this tomorrow too before moving on to my Phase 2 focus: Computer vision!

### Code for the Day:

- [iris classification](https://github.com/sagecodes/irsit-classification2-knn)
- [Titanic Survival](https://github.com/sagecodes/titanic-survival-logistic-regression)

----------------

## Day 28 ☑

Project refactoring and making sure I can export jupyter notebooks to my website (tables and code snippets are scrollable on mobile)

### Code for the Day:

[iris classification](https://github.com/sagecodes/irsit-classification2-knn)
[Sage Blog](https://github.com/sagecodes/sage-blog)

----------------

## Day 29 ☑

day29: Got a WGAN & WGAN-GP up and running thanks to the book "generative deep learning"

Awesome to see how fast it started making faces. This was just over 300 epoch and a dataset of only 1700 faces. Even if they kind of look like nightmares...

[read more about the book](https://medium.com/applied-data-science/generative-deep-learning-the-parrot-has-landed-b291e6c254e)

### Code for the Day:

- [WGAN Testing](https://github.com/sagecodes/WGAN-Testing)

![faces](https://pbs.twimg.com/media/EB0otPmUIAAEvHL?format=jpg&name=medium)

----------------

## Day 30 ☑

⏳Worked over an hour this morning trying to figure out a problem on GAN.

❌Can't.

💻Go to work. 

🏠Come back home.

✅Fix the problem in 1 minute...

The brain is crazy! 

### Code for the Day:

- [WGAN Testing](https://github.com/sagecodes/WGAN-Testing)


----------------

## Day 31 ☑

WGAN from before is now generating 224px higher quality images., making some really interesting art pieces! 

Read about 1/3 of first book in Deep Learning for computer vision series.

### Code for the Day:

- [WGAN Testing](https://github.com/sagecodes/WGAN-Testing)

![art](https://pbs.twimg.com/media/EB_Lp_GUEAI66mb?format=jpg&name=medium)


----------------

## Day 32 ☑

More reading on #DeepLearning for computer vision 

a little more work on WGAN

Helped someone on django app at PuPPy programming night

I promise some more juicy code and projects are coming soon!

### Code for the Day:

- [WGAN Testing](https://github.com/sagecodes/WGAN-Testing)

![art gen images](https://pbs.twimg.com/media/ECEeX9PUYAAvbF7?format=jpg&name=small)

----------------

## Day 33 ☑

Messing around with OpenCv (its been awhile)!
Refactoring some previous projects.

If you've made a portfolio of ML/Data projects I would love to see it! Looking for inspiration and new formats!

### Code for the Day:

- [Alexa Amazon Review Classfication - Random Forest](https://github.com/sagecodes/Amazon-Review-Classification-Random-Forest)

----------------

## Day 34 ☐

Refactored more previous projects

Research for a web scraping project (To be used in future computer vision projects)



### Code for the Day:

- [Alexa Amazon Review Classfication - Random Forest](https://github.com/sagecodes/Amazon-Review-Classification-Random-Forest)
- [Kyphosis Prediction - Random Forest](https://github.com/sagecodes/kyphsis-classifier-random-forest/blob/master/kyphosis-prediction-random-forest.ipynb)

----------------

## Day 35 ☐

Deep Learning for Computer Vision 1


----------------

## Day 36 ☐

Deep Learning for Computer Vision 2


----------------

## Day 37 ☐

Deep Learning for Computer Vision 2


----------------

## Day 38 ☐

Deep Learning for Computer Vision 2


----------------

## Day 39 ☐

Deep Learning for Computer Vision 2


----------------

## Day 40 ☐

Deep Learning for Computer Vision 2


----------------

## Day 41 ☐

Deep Learning for Computer Vision 2


----------------

## Day 42 ☐

Deep Learning for Computer Vision 2


----------------

## Day 41 ☐

Deep Learning for Computer Vision 2


----------------

## Day 42 ☐

Deep Learning for Computer Vision 3

----------------

## Day 43 ☐

Deep Learning for Computer Vision 3

----------------

## Day 44 ☐

Deep Learning for Computer Vision 3

----------------

## Day 45 ☐

Deep Learning for Computer Vision 3

----------------

## Day 46 ☐

Deep Learning for Computer Vision 3

----------------

## Day 47 ☐

Deep Learning for Computer Vision 3

----------------

## Day 48 ☐

Deep Learning for Computer Vision 3

----------------

## Day 49 ☐

Deep Learning for Computer Vision 3

----------------

## Day 50 ☐

HALF WAY!

Round out on resources for application & theory

Start planning more serious projects

----------------

## Day 51 ☐

Phase 3

----------------

## Day 52 ☐

----------------

## Day 53 ☐

----------------

## Day 54 ☐

----------------

## Day 55 ☐

----------------

## Day 56 ☐

----------------

## Day 57 ☐

----------------

## Day 58 ☐

----------------

## Day 59 ☐

----------------

## Day 60 ☐

----------------

## Day 61 ☐

----------------

## Day 62 ☐

----------------

## Day 63 ☐

----------------

## Day 64 ☐

----------------

## Day 65 ☐

----------------

## Day 66 ☐

----------------

## Day 67 ☐

----------------

## Day 68 ☐

----------------

## Day 69 ☐

----------------

## Day 70 ☐

----------------

## Day 71 ☐

----------------

## Day 72 ☐

----------------

## Day 73 ☐

----------------

## Day 74 ☐

----------------

## Day 75 ☐

----------------

## Day 76 ☐

----------------

## Day 77 ☐

----------------

## Day 78 ☐

----------------

## Day 79 ☐

----------------

## Day 80 ☐

----------------

## Day 81 ☐

----------------

## Day 82 ☐

----------------

## Day 83 ☐

----------------

## Day 84 ☐

----------------

## Day 85 ☐

CAPSTONE type Project(s)

----------------

## Day 86 ☐

----------------

## Day 87 ☐

----------------

## Day 88 ☐

----------------

## Day 89 ☐

----------------

## Day 90 ☐

----------------

## Day 91 ☐

----------------

## Day 92 ☐

----------------

## Day 93 ☐

----------------

## Day 94 ☐

----------------

## Day 95 ☐

----------------

## Day 96 ☐

----------------

## Day 97 ☐

----------------

## Day 98 ☐

----------------

## Day 99 ☐

----------------

## Day 100 ☐
DONE!!

----------------



## Completed Projects & Case Studies during 100 days:

#### Phase 1: Learn & Implement Basic Machine Learning & Deep Learning Models

1. [Iris Classification - kNN](https://github.com/sagecodes/irsit-classification2-knn)
2. [T-Shirt Classfication- kNN](https://github.com/sagecodes/tshirt-size-prediction-KNN)
3. [Chicago Crime Rate time series forecast - FBprophet ](https://github.com/sagecodes/chicago-crime-prediction-fbprophet)
4. [Avocado Price forecast - FBprophet](https://github.com/sagecodes/avocado-forecasting-fbprophet)
5. [Alexa Amazon Review Classfication - Random Forest](https://github.com/sagecodes/Amazon-Review-Classification-Random-Forest)
6. [Kyphosis Prediction - Random Forest](https://github.com/sagecodes/kyphsis-classifier-random-forest/blob/master/kyphosis-prediction-random-forest.ipynb)
7. [Email Spam Classifer -  Naive Bayes](https://github.com/sagecodes/spam-classifier-naive-bayes/blob/master/Spam%20classifier.ipynb)
8. [Credit Card Fraud - Naive Bayes](https://github.com/sagecodes/credit-fraud-classfier-naive-bayes/blob/master/Credit%20Card%20Fraud%20Classifier.ipynb)
9. [Icecream vs. Temp - Simple Linear Regression](https://github.com/sagecodes/Icecream-temp-simple-linear-regression/blob/master/ice%20cream%20vs%20temp%20regression.ipynb)
10. [Fuel Consumption vs. horsepower - Simple Linear Regression](https://github.com/sagecodes/fuel-consumption-linear-regression/blob/master/fuel%20consumption.ipynb)
11. [Salary Prediction with Polynominal Regression](https://github.com/sagecodes/salary-prediction-polynomial-regression/blob/master/salary%20prediction%20polynomial%20regression.ipynb)
12. [Price vs Manufacturing - polynomial Regression](https://github.com/sagecodes/price-vs-manufacturing-polynomial-regression/blob/master/Cost%20per%20model%20prediction.ipynb)
13. [stock employment - multiple regression](https://github.com/sagecodes/stock-employment-multiple-regression/blob/master/s%26p%20500%20predict.ipynb)
14. [Admissions - multiple regression](https://github.com/sagecodes/admission-multiple-regression)
15. [Seattle House price prediction-ANN-Regression](https://github.com/sagecodes/house-price-prediction-ANN)
16. [house predict - lasso & ridge-regrssion](https://github.com/sagecodes/house-predict-lasso-ridge-regrssion)
17. [WGAN Testing](https://github.com/sagecodes/WGAN-Testing)
18. [Car Sales Prediction - ANN](https://github.com/sagecodes/car-sales-prediction-ANN)
19. [cifar imageclassifier - CNN](https://github.com/sagecodes/cifar-classifier-CNN)
20. [Traffic sign classifier](https://github.com/sagecodes/traffic-signs-classifier-lenet)
21. [Yelp classification - NLTK](https://github.com/sagecodes/yelp-reviews-Classification-NLP-NLTK)
22. [Movie Recommender - collab filtering](https://github.com/sagecodes/movie-recommender-collab-filter)
23. [Fashion MNIST](https://github.com/sagecodes/fashion-classifier)
